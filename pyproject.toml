[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chat-app"
version = "1.0.0"
authors = [
    {name = "Chat App Development Team", email = "dev@chatapp.example.com"},
]
description = "A real-time TCP-based chat application with rich terminal UI"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Chat",
    "Topic :: Internet",
    "Topic :: System :: Networking",
    "Topic :: Terminals",
]
keywords = ["chat", "networking", "terminal", "real-time", "tcp", "rich", "ui"]
dependencies = [
    "rich>=13.0.0,<14.0.0",
]

[project.optional-dependencies]
yaml = ["PyYAML>=6.0,<7.0"]
monitoring = ["psutil>=5.9.0,<6.0"]
full = [
    "PyYAML>=6.0,<7.0",
    "psutil>=5.9.0,<6.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "hypothesis>=6.0.0",
]

[project.scripts]
chat-server = "chat_app.server.main:main"
chat-client = "chat_app.client.main:main"

[project.urls]
Homepage = "https://github.com/example/chat-app"
"Bug Reports" = "https://github.com/example/chat-app/issues"
Source = "https://github.com/example/chat-app"
Documentation = "https://github.com/example/chat-app/wiki"

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.package-data]
chat_app = ["*.md", "*.txt", "*.json", "*.yaml", "*.yml"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "fuzzing: marks tests as fuzzing tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["chat_app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"